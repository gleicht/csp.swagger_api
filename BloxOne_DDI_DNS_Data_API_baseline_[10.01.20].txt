	
consumes	
0	"application/json"
produces	
0	"application/json"
schemes	
0	"http"
1	"https"
swagger	"2.0"
info	
description	"The DNS Data is a BloxOne DDI service providing primary authoritative zone support. DNS Data is authoritative for all DNS resource records and is acting as a primary DNS server. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network. \n\n"
title	"DNS Data API"
version	"v1"
basePath	"/api/ddi/v1/"
paths	
/dns/record	
get	
tags	
0	"record"
summary	"List the Record objects."
operationId	"recordList"
parameters	
0	
type	"string"
description	"\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t"
name	"_fields"
in	"query"
1	
type	"string"
description	"\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  >    |  Greater Than              | \n|   >=  |  Greater Than or Equal To  | \n|  <    |  Less Than                 | \n|  <=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t"
name	"_filter"
in	"query"
2	
type	"integer"
description	"\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t"
name	"_offset"
in	"query"
3	
type	"integer"
description	"\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t"
name	"_limit"
in	"query"
4	
type	"string"
description	"\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t"
name	"_page_token"
in	"query"
5	
type	"string"
description	"\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t"
name	"_order_by"
in	"query"
6	
type	"string"
description	"This parameter is used for filtering by tags."
name	"_tfilter"
in	"query"
7	
type	"string"
description	"This parameter is used for sorting by tags."
name	"_torder_by"
in	"query"
responses	
200	
description	"GET operation response"
schema	
$ref	"#/definitions/dataListRecordResponse"
post	
tags	
0	"record"
summary	"Create the Record object."
operationId	"recordCreate"
parameters	
0	
type	"string"
description	"An application identifier that will be used among\nother infrastructure services to identify the application"
name	"payload.id.application_name"
in	"path"
required	true
1	
type	"string"
description	"An application specific type name of a resource"
name	"payload.id.resource_type"
in	"path"
required	true
2	
name	"body"
in	"body"
required	true
schema	
$ref	"#/definitions/dataRecord"
responses	
201	
description	"POST operation response"
schema	
$ref	"#/definitions/dataCreateRecordResponse"
/dns/record/{id}	
get	
tags	
0	"record"
summary	"Read the Record object."
operationId	"recordRead"
parameters	
0	
type	"string"
description	"An application identifier that will be used among\nother infrastructure services to identify the application"
name	"id.application_name"
in	"path"
required	true
1	
type	"string"
description	"An application specific type name of a resource"
name	"id.resource_type"
in	"path"
required	true
2	
type	"string"
description	"An application specific resource identity of a resource"
name	"id"
in	"path"
required	true
3	
type	"string"
description	"\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t"
name	"_fields"
in	"query"
responses	
200	
description	"GET operation response"
schema	
$ref	"#/definitions/dataReadRecordResponse"
delete	
tags	
0	"record"
summary	"Delete the Record object."
operationId	"recordDelete"
parameters	
0	
type	"string"
description	"An application identifier that will be used among\nother infrastructure services to identify the application"
name	"id.application_name"
in	"path"
required	true
1	
type	"string"
description	"An application specific type name of a resource"
name	"id.resource_type"
in	"path"
required	true
2	
type	"string"
description	"An application specific resource identity of a resource"
name	"id"
in	"path"
required	true
responses	
204	
description	"No Content"
patch	
tags	
0	"record"
summary	"Update the Record object."
operationId	"recordUpdate"
parameters	
0	
type	"string"
description	"An application identifier that will be used among\nother infrastructure services to identify the application"
name	"payload.id.application_name"
in	"path"
required	true
1	
type	"string"
description	"An application specific type name of a resource"
name	"payload.id.resource_type"
in	"path"
required	true
2	
type	"string"
description	"An application specific resource identity of a resource"
name	"id"
in	"path"
required	true
3	
name	"body"
in	"body"
required	true
schema	
$ref	"#/definitions/dataRecord"
responses	
201	
description	"PATCH operation response"
schema	
$ref	"#/definitions/dataUpdateRecordResponse"
/dns/record/{id}/serial_increment	
post	
tags	
0	"record"
summary	"SOA serial increment"
operationId	"recordSOASerialIncrement"
parameters	
0	
type	"string"
description	"An application identifier that will be used among\nother infrastructure services to identify the application"
name	"id.application_name"
in	"path"
required	true
1	
type	"string"
description	"An application specific type name of a resource"
name	"id.resource_type"
in	"path"
required	true
2	
type	"string"
description	"An application specific resource identity of a resource"
name	"id"
in	"path"
required	true
3	
name	"body"
in	"body"
required	true
schema	
$ref	"#/definitions/dataSOASerialIncrementRequest"
responses	
201	
description	"POST operation response"
schema	
$ref	"#/definitions/dataSOASerialIncrementResponse"
definitions	
dataCreateRecordResponse	
description	"The Record object create response format."
type	"object"
title	"CreateRecordResponse"
properties	
result	
description	"The created Record object."
$ref	"#/definitions/dataRecord"
dataListRecordResponse	
description	"The Record object list response format."
type	"object"
title	"ListRecordResponse"
properties	
results	
type	"array"
title	"List of existing Record objects"
items	
$ref	"#/definitions/dataRecord"
dataReadRecordResponse	
description	"The Record object read response format."
type	"object"
title	"ReadRecordResponse"
properties	
result	
description	"Existing Record object."
$ref	"#/definitions/dataRecord"
dataRecord	
description	"DNS resource record object."
type	"object"
title	"Record"
required	
0	"name"
1	"zone"
2	"type"
3	"rdata_subfields"
properties	
absolute_name_spec	
type	"string"
title	"Synthetic field, used to determine zone and\\or name_in_zone field for records"
absolute_zone_name	
description	"ReadOnly. The absolute domain name of the zone where this record belongs."
type	"string"
comment	
description	"Optional. Comment for the object."
type	"string"
disabled	
description	"Optional. True if the object is disabled. A disabled object is effectively non-existent when generating configuration."
type	"boolean"
format	"boolean"
dns_absolute_name_spec	
type	"string"
title	"ReadOnly. The DNS protocol textual representation of absolute_name_spec"
dns_absolute_zone_name	
description	"ReadOnly. The DNS protocol textual representation of the absolute domain name of the zone where this record belongs."
type	"string"
dns_name_in_zone	
description	"ReadOnly. The DNS protocol textual representation of the relative owner name."
type	"string"
dns_rdata	
description	"ReadOnly. The DNS protocol textual representation of the record data."
type	"string"
id	
description	"The resource identifier."
type	"string"
readOnly	true
inheritance_sources	
description	"Optional. Inheritance configuration."
$ref	"#/definitions/dataRecordInheritance"
name_in_zone	
description	"Required, writeable on create, readonly otherwise.\nThe relative owner name to the zone origin."
type	"string"
options	
title	"RR type-specific non-protocol options.\nValid values: \"CREATE_PTR\": true (for A, AAAA types)"
$ref	"#/definitions/typesJSONValue"
rdata	
description	"Required. JSON representation of resource record data."
$ref	"#/definitions/typesJSONValue"
source	
description	"ReadOnly. RR type-specific non-protocol record source.\nThe source is a combination of indicators, each tracking how resource record appeared in system.\nListed below are source indicators with their meaning:\n\u2028\nSource indicator     | Description\n----------------     | --------------------------------\nSTATIC               |  Record was created manually by API call to dns/record. Valid for all record types except SOA.\nSYSTEM               |  Record was created automatically based on name server assignment. Valid for SOA, NS, A, AAAA, PTR record types.\nDYNAMIC              |  Record was created dynamically by performing dynamic update.\nSTATIC, SYSTEM       |  Record was created manually by API call but it is obfuscated by record generated based on name server assignment.\nDYNAMIC, SYSTEM      |  Record was created dynamically by DDNS but it is obfuscated by record generated based on name server assignment."
type	"array"
items	
type	"string"
tags	
title	"Tags"
$ref	"#/definitions/typesJSONValue"
ttl	
description	"Record time to live value in seconds."
type	"integer"
format	"int64"
type	
type	"string"
title	"Required. Resource record type.\nSpecified in the textual mnemonic format or in the \"TYPEnnn\" format where \"nnn\" indicates the numeric type value.\nSupported values: A, AAAA, CAA, CNAME, MX, NAPTR, NS, PTR, SOA, SRV, TXT"
view	
description	"The resource identifier."
type	"string"
view_name	
description	"ReadOnly. Display name of dns/view. Synthetic field based on parent zone’s view."
type	"string"
zone	
description	"The resource identifier."
type	"string"
dataRecordInheritance	
description	"Inheritance configuration for a field of type [Record]."
type	"object"
title	"RecordInheritance"
properties	
ttl	
description	"Optional. Field config for ttl field from [Record] object."
$ref	"#/definitions/inheritance2InheritedUInt32"
dataSOASerialIncrementRequest	
type	"object"
properties	
fields	
$ref	"#/definitions/protobufFieldMask"
id	
description	"The resource identifier."
type	"string"
readOnly	true
serial_increment	
description	"Optional. Default increment SOA serial number by 1,000."
type	"integer"
format	"int64"
dataSOASerialIncrementResponse	
description	"The SOA Record object serial increment response format."
type	"object"
title	"SOASerialIncrementResponse"
properties	
result	
$ref	"#/definitions/dataRecord"
dataUpdateRecordResponse	
description	"The Record object update response format."
type	"object"
title	"UpdateRecordResponse"
properties	
result	
title	"Updated Record object"
$ref	"#/definitions/dataRecord"
inheritance2InheritedUInt32	
type	"object"
properties	
action	
type	"string"
display_name	
type	"string"
source	
description	"The resource identifier."
type	"string"
value	
type	"integer"
format	"int64"
protobufFieldMask	
description	"paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, the existing\nrepeated values in the target resource will be overwritten by the new values.\nNote that a repeated field is only allowed in the last position of a `paths`\nstring.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then the existing sub-message in the target resource is\noverwritten. Given the target message:\n\n    f {\n      b {\n        d : 1\n        x : 2\n      }\n      c : 1\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d : 10\n      }\n    }\n\nthen if the field mask is:\n\n paths: \"f.b\"\n\nthen the result will be:\n\n    f {\n      b {\n        d : 10\n      }\n      c : 1\n    }\n\nHowever, if the update mask was:\n\n paths: \"f.b.d\"\n\nthen the result would be:\n\n    f {\n      b {\n        d : 10\n        x : 2\n      }\n      c : 1\n    }\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of the all the API methods, which have any FieldMask type\nfield in the request, should verify the included field paths, and return\n`INVALID_ARGUMENT` error if any path is duplicated or unmappable."
type	"object"
title	"`FieldMask` represents a set of symbolic field paths, for example:"
properties	
paths	
description	"The set of field mask paths."
type	"array"
items	
type	"string"
typesJSONValue	
type	"object"
properties	
value	
type	"string"
securityDefinitions	
ApiKeyAuth	
type	"apiKey"
name	"Authorization"
in	"header"
security	
0	
ApiKeyAuth	[]